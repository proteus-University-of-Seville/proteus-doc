<?xml version='1.0' encoding='UTF-8'?>
<object id="5KZsq66CYG2s" classes="general-traceable-object paragraph" acceptedChildren=":Proteus-none" acceptedParents=":Proteus-document section" selectedCategory="detail">
  <properties>
    <stringProperty name=":Proteus-name" category="general"><![CDATA[Description]]></stringProperty>
    <dateProperty name=":Proteus-date" category="general">2025-03-13</dateProperty>
    <stringProperty name="version" category="general"><![CDATA[1.0]]></stringProperty>
    <traceProperty name="authors" category="general" acceptedTargets="stakeholder" traceType=":Proteus-author">
      <trace target="4Shtuic5WXUn" traceType=":Proteus-author"/>
    </traceProperty>
    <traceProperty name="sources" category="general" acceptedTargets="stakeholder" traceType=":Proteus-information-source"/>
    <markdownProperty name="text" category="detail"><![CDATA[The main goal is to allow users to export LaTeX code or LaTeX generated documents from application objects/documents. The initial idea was to generate LaTeX code using XSLT and the process it using a local or remote server.

In order to make this feature possible, export strategies will be managed as plugins (just affect the way they are loaded, not the implementation of each strategy).

At first, showing the compiled (from LaTeX) PDF in the application was the main objective. This approach has a few downfalls:

- PDF visualization is not easy and may require refactoring the whole render strategy.
- Navigation does not work in the compiled PDF so user cannot click on the document tree.
- PDF loading is slower than HTML. LaTeX compilation to PDF also adds time to the whole render.
- Current application views behavior (rendering after a change) might not be ideal for LaTeX compilation.
- Users cannot see the LaTeX code unless another LaTeX only view is implemented or the code is exported.

It was decided to not show the compiled PDF but the LaTeX code generated by the XSLT. This allows to include the necessary HTML code to allow navigation, this code can be deleted before export. The export will create a folder with all the LaTeX code and document resources. It will also try to call `pdflatex` command to make two compilation attempts (to resolve references) in order to generate a PDF.

]]></markdownProperty>
    <traceProperty name="dependencies" category="dependencies" acceptedTargets="general-traceable-object" traceType=":Proteus-dependency"/>
    <markdownProperty name="comments" category="comments"><![CDATA[]]></markdownProperty>
  </properties>
  <children/>
</object>
