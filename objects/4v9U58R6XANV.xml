<?xml version='1.0' encoding='UTF-8'?>
<object id="4v9U58R6XANV" classes="paragraph" acceptedChildren=":Proteus-none" acceptedParents=":Proteus-any">
  <properties>
    <stringProperty name=":Proteus-name" category="general"><![CDATA[Plugins modules]]></stringProperty>
    <dateProperty name=":Proteus-date" category="general">2024-03-07</dateProperty>
    <floatProperty name="version" category="general">1.0</floatProperty>
    <markdownProperty name="text" category="details"><![CDATA[Plugins may have dependencies that are not shared with Proteus application. This dependencies must be added as hiddenimports so they are included in the executable.

As an alternative, a plugin developer may download the dependency source and add the dependecy package to the `PYTHONPATH` (`sys.path`). This is a workaround in case the plugins is loaded from an external directory instead of being packed directly into the exe. Do not recommended if the app is being packed as an `.exe` file.

```
a = Analysis(
    ['proteus\\__main__.py'],
    pathex=[],
    binaries=[],
    datas=[('proteus.ini', '.')],
    hiddenimports=['myDependency'],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    noarchive=False,
)
...
```]]></markdownProperty>
    <markdownProperty name="comments" category="comments"><![CDATA[]]></markdownProperty>
    <traceProperty name="authors" category="general" acceptedTargets="stakeholder" traceType=":Proteus-author">
      <trace target="4Shtuic5WXUn" traceType=":Proteus-author"/>
    </traceProperty>
    <traceProperty name="dependencies" category="dependencies" acceptedTargets="general-traceable-object glossary-item" traceType=":Proteus-dependency"/>
    <traceProperty name="sources" category="dependencies" acceptedTargets="stakeholder" traceType=":Proteus-information-source"/>
  </properties>
  <children/>
</object>
